# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/appexecfwk/standard/appexecfwk.gni")

module_output_path = "appexecfwk_standard/formmgrservice"

ohos_unittest("FmsFormProviderMgrTest") {
  module_out_path = module_output_path

  sources = [
    "//foundation/appexecfwk/standard/interfaces/innerkits/fmskit/native/src/form_mgr.cpp",
    "//foundation/appexecfwk/standard/services/formmgr/test/mock/src/mock_bundle_manager.cpp",
    "//foundation/appexecfwk/standard/services/formmgr/test/mock/src/mock_form_host_client.cpp",
    "//foundation/appexecfwk/standard/services/formmgr/test/mock/src/mock_form_provider_client.cpp",
  ]
  sources += [ "fms_form_provider_mgr_test.cpp" ]

  include_dirs = [
    "//third_party/zlib/contrib/minizip",
    "//third_party/zlib",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/fmskit/native/include/",
    "//foundation/appexecfwk/standard/common/log/include/",
    "//foundation/appexecfwk/standard/services/formmgr/include",
    "//foundation/appexecfwk/standard/services/bundlemgr/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base/include/",
    "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/include/formmgr/",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include/",
    "//foundation/distributedschedule/samgr/adapter/interfaces/innerkits/include/",
  ]

  configs = [
    "${services_path}/formmgr/test:formmgr_test_config",
    "//foundation/aafwk/standard/services/abilitymgr:abilityms_config",
    "${appexecfwk_path}/interfaces/innerkits/appexecfwk_core:formmgr_sdk_config",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  deps = [
    "${appexecfwk_path}/common:libappexecfwk_common",
    "${appexecfwk_path}/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
    "${appexecfwk_path}/interfaces/innerkits/appexecfwk_core:appexecfwk_core",
    "${appexecfwk_path}/interfaces/innerkits/fmskit:fmskit_native",
    "${libs_path}/libeventhandler:libeventhandler_target",
    "${services_path}/formmgr:fms_target",
    "//base/security/permission/interfaces/innerkits/permission_standard/permissionsdk:libpermissionsdk_standard",
    "//foundation/aafwk/standard/interfaces/innerkits/base:base",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want",
    "//foundation/aafwk/standard/services/abilitymgr:abilityms_target",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gmock_main",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "appspawn:appspawn_socket_client",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
}

group("unittest") {
  testonly = true

  deps = [ ":FmsFormProviderMgrTest" ]
}
