# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/appexecfwk/standard/appexecfwk.gni")

ohos_source_set("appmgr_mst_source") {
  testonly = true

  sources = [
    "${services_path}/appmgr/src/ability_running_record.cpp",
    "${services_path}/appmgr/src/ams_mgr_scheduler.cpp",
    "${services_path}/appmgr/src/app_death_recipient.cpp",
    "${services_path}/appmgr/src/app_lifecycle_deal.cpp",
    "${services_path}/appmgr/src/app_mgr_service.cpp",
    "${services_path}/appmgr/src/app_mgr_service_event_handler.cpp",
    "${services_path}/appmgr/src/app_mgr_service_inner.cpp",
    "${services_path}/appmgr/src/app_process_manager.cpp",
    "${services_path}/appmgr/src/app_running_manager.cpp",
    "${services_path}/appmgr/src/app_running_record.cpp",
    "${services_path}/appmgr/src/app_spawn_client.cpp",
    "${services_path}/appmgr/src/app_spawn_msg_wrapper.cpp",
    "${services_path}/appmgr/src/app_spawn_socket.cpp",
    "${services_path}/appmgr/src/cgroup_manager.cpp",
    "${services_path}/appmgr/src/lmks_client.cpp",
    "${services_path}/appmgr/src/process_optimizer.cpp",
    "${services_path}/appmgr/src/process_optimizer_uba.cpp",
    "${services_path}/appmgr/src/remote_client_manager.cpp",
    "${services_path}/appmgr/test/mock/src/mock_bundle_manager.cpp",

    #"//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core/src/appmgr/app_resident_process_info.cpp",
  ]

  defines = [ "APP_LOG_TAG = \"AppMgrService\"" ]

  include_dirs = [
    "//third_party/json/include",
    "${services_path}/appmgr/test/mock/include",
    "${services_path}/appmgr/include/lmks",
  ]

  public_configs = [
    "${libs_path}/libeventhandler:libeventhandler_config",
    "${services_path}/test:services_module_test_config",
    "${services_path}/appmgr:appmgr_config",
    "${services_path}/test:services_mock_ams_config",
    "${appexecfwk_path}/interfaces/innerkits/appexecfwk_core:appmgr_sdk_config",
    "${appexecfwk_path}/interfaces/innerkits/appexecfwk_core:bundlemgr_sdk_config",
    "${appexecfwk_path}/interfaces/innerkits/appexecfwk_base:appexecfwk_base_sdk_config",
    "${innerkits_path}/appexecfwk_core:appexecfwk_core_config",
    "${innerkits_path}/libeventhandler:public_libeventhandler_config",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want_public_config",
    "//foundation/aafwk/standard/interfaces/innerkits/base:base_public_config",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy_config",
    "//utils/native/base:utils_config",
    "//third_party/googletest:gtest_config",
    "//third_party/googletest:gmock_config",
  ]
  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  public_deps = [
    "${common_path}:libappexecfwk_common",
    "${innerkits_path}/appexecfwk_base:appexecfwk_base",
    "${innerkits_path}/appexecfwk_core:appexecfwk_core",
    "${libs_path}/libeventhandler:libeventhandler_target",
    "//base/security/permission/interfaces/innerkits/permission_standard/permissionsdk:libpermissionsdk_standard",
    "//base/startup/appspawn_standard:appspawn_socket_client",
    "//foundation/aafwk/standard/interfaces/innerkits/base:base",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ces_standard:cesfwk_core",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
  ]
}

group("moduletest") {
  testonly = true

  deps = [
    "ability_running_record_test:moduletest",
    "app_life_cycle_test:moduletest",
    "app_mgr_service_test:moduletest",
    "app_recent_list_test:moduletest",
    "app_running_record_test:moduletest",
    "app_service_flow_test:moduletest",
    "ipc_ams_mgr_test:moduletest",
    "ipc_app_mgr_test:moduletest",
    "ipc_app_scheduler_test:moduletest",
    "service_app_spawn_client_test:moduletest",
    "service_event_drive_test:moduletest",
    "service_start_process_test:moduletest",

    # "process_optimizer_uba_test:moduletest",
  ]
}
